name: prepare-wf

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  ensure-labels:
    name: Ensure required labels exist
    runs-on: ubuntu-latest
    permissions:
          contents: write
          issues: write
    steps:
      - uses: actions/checkout@v5
      
      - uses: ./.github/actions/ensure-label
        with:
          labels_json: |
            [
              {"name":"[template-sync]","color":"b9e3ff","description":"Changes from the template repo"},
              {"name": "[skip changeset check]", "color": "ff4d4f", "description": "Skip the changeset validation check"}
            ]
          token: ${{ secrets.GITHUB_TOKEN }}

  validate-configuration:
    name: Validate repository configuration
    runs-on: ubuntu-latest
    steps:
      - name: Check required variables and secrets
        run: |
          echo "üîç Checking repository configuration..."
          
                    # Check required variables
                    MISSING_VARS=""
                    if [[ -z "${{ vars.CI_GPG_USER_NAME }}" ]]; then
                      MISSING_VARS="${MISSING_VARS}CI_GPG_USER_NAME "
                    fi
                    if [[ -z "${{ vars.CI_GPG_USER_EMAIL }}" ]]; then
                      MISSING_VARS="${MISSING_VARS}CI_GPG_USER_EMAIL "
                    fi
                    if [[ "${{ vars.ENABLE_MULTI_RELEASE }}" != "true" && "${{ vars.ENABLE_MULTI_RELEASE }}" != "false" ]]; then
                      MISSING_VARS="${MISSING_VARS}ENABLE_MULTI_RELEASE "
                    fi
                    
                    # Check required secrets
                    MISSING_SECRETS=""
                    if [[ -z "${{ secrets.GPG_PRIVATE_KEY }}" ]]; then
                      MISSING_SECRETS="${MISSING_SECRETS}GPG_PRIVATE_KEY "
                    fi
                    if [[ -z "${{ secrets.GPG_PASSPHRASE }}" ]]; then
                      MISSING_SECRETS="${MISSING_SECRETS}GPG_PASSPHRASE "
                    fi
                    if [[ -z "${{ secrets.BOT_TOKEN }}" ]]; then
                      MISSING_SECRETS="${MISSING_SECRETS}BOT_TOKEN "
                    fi
                    if [[ -z "${{ secrets.NPM_TOKEN }}" ]]; then
                      MISSING_SECRETS="${MISSING_SECRETS}NPM_TOKEN "
                    fi
                    
                    # Report results
                    if [[ -n "$MISSING_VARS" ]] || [[ -n "$MISSING_SECRETS" ]]; then
                      echo "‚ùå Missing required configuration!"
                      echo ""
                      if [[ -n "$MISSING_VARS" ]]; then
                        echo "üìù Missing Repository Variables (Settings ‚Üí Secrets and variables ‚Üí Actions ‚Üí Variables):"
                        for var in $MISSING_VARS; do
                          if [[ "$var" == "ENABLE_MULTI_RELEASE" ]]; then
                            echo "   - $var (Must be explicitly set to 'true' or 'false')"
                          else
                            echo "   - $var"
                          fi
                        done
                        echo ""
                      fi
                      if [[ -n "$MISSING_SECRETS" ]]; then
                        echo "üîí Missing Repository Secrets (Settings ‚Üí Secrets and variables ‚Üí Actions ‚Üí Secrets):"
                        for secret in $MISSING_SECRETS; do
                          echo "   - $secret"
                        done
                        echo ""
                      fi
                      echo "üîó Configure at: https://github.com/${{ github.repository }}/settings/secrets/actions"
                      echo ""
                      exit 1
                    fi
                    
                    echo "‚úÖ All required variables and secrets are configured!"
                    echo "   ‚úì CI_GPG_USER_NAME"
                    echo "   ‚úì CI_GPG_USER_EMAIL"
                    echo "   ‚úì ENABLE_MULTI_RELEASE"
                    echo "   ‚úì GPG_PRIVATE_KEY"
                    echo "   ‚úì GPG_PASSPHRASE"
                    echo "   ‚úì BOT_TOKEN"
                    echo "   ‚úì NPM_TOKEN" 
          echo "prepare-wf job completed successfully."
